$date
	Mon Jun 30 20:54:59 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module round_test $end
$var wire 32 ! t_rr [31:0] $end
$var wire 32 " t_rl [31:0] $end
$var reg 48 # t_k [47:0] $end
$var reg 32 $ t_xl [31:0] $end
$var reg 32 % t_xr [31:0] $end
$scope module t $end
$var wire 48 & k [47:0] $end
$var wire 32 ' rl [31:0] $end
$var wire 32 ( rr [31:0] $end
$var wire 32 ) xl [31:0] $end
$var wire 32 * xr [31:0] $end
$var wire 32 + xorRes2 [31:0] $end
$var wire 48 , xorRes [47:0] $end
$var wire 4 - rm7 [3:0] $end
$var wire 4 . rm6 [3:0] $end
$var wire 4 / rm5 [3:0] $end
$var wire 4 0 rm4 [3:0] $end
$var wire 4 1 rm3 [3:0] $end
$var wire 4 2 rm2 [3:0] $end
$var wire 4 3 rm1 [3:0] $end
$var wire 4 4 rm0 [3:0] $end
$var wire 6 5 r7 [5:0] $end
$var wire 6 6 r6 [5:0] $end
$var wire 6 7 r5 [5:0] $end
$var wire 6 8 r4 [5:0] $end
$var wire 6 9 r3 [5:0] $end
$var wire 6 : r2 [5:0] $end
$var wire 6 ; r1 [5:0] $end
$var wire 6 < r0 [5:0] $end
$var wire 32 = perm2Res [31:0] $end
$var wire 48 > perm1Res [47:0] $end
$var wire 32 ? mergeResult [31:0] $end
$scope module m1 $end
$var wire 4 @ x7 [3:0] $end
$var wire 4 A x6 [3:0] $end
$var wire 4 B x5 [3:0] $end
$var wire 4 C x4 [3:0] $end
$var wire 4 D x3 [3:0] $end
$var wire 4 E x2 [3:0] $end
$var wire 4 F x1 [3:0] $end
$var wire 4 G x0 [3:0] $end
$var wire 32 H r [31:0] $end
$upscope $end
$scope module mulXor1 $end
$var wire 48 I k [47:0] $end
$var wire 48 J xorRes [47:0] $end
$var wire 48 K permR [47:0] $end
$scope begin id[0] $end
$var parameter 2 L t $end
$upscope $end
$scope begin id[1] $end
$var parameter 2 M t $end
$upscope $end
$scope begin id[2] $end
$var parameter 3 N t $end
$upscope $end
$scope begin id[3] $end
$var parameter 3 O t $end
$upscope $end
$scope begin id[4] $end
$var parameter 4 P t $end
$upscope $end
$scope begin id[5] $end
$var parameter 4 Q t $end
$upscope $end
$scope begin id[6] $end
$var parameter 4 R t $end
$upscope $end
$scope begin id[7] $end
$var parameter 4 S t $end
$upscope $end
$scope begin id[8] $end
$var parameter 5 T t $end
$upscope $end
$scope begin id[9] $end
$var parameter 5 U t $end
$upscope $end
$scope begin id[10] $end
$var parameter 5 V t $end
$upscope $end
$scope begin id[11] $end
$var parameter 5 W t $end
$upscope $end
$scope begin id[12] $end
$var parameter 5 X t $end
$upscope $end
$scope begin id[13] $end
$var parameter 5 Y t $end
$upscope $end
$scope begin id[14] $end
$var parameter 5 Z t $end
$upscope $end
$scope begin id[15] $end
$var parameter 5 [ t $end
$upscope $end
$scope begin id[16] $end
$var parameter 6 \ t $end
$upscope $end
$scope begin id[17] $end
$var parameter 6 ] t $end
$upscope $end
$scope begin id[18] $end
$var parameter 6 ^ t $end
$upscope $end
$scope begin id[19] $end
$var parameter 6 _ t $end
$upscope $end
$scope begin id[20] $end
$var parameter 6 ` t $end
$upscope $end
$scope begin id[21] $end
$var parameter 6 a t $end
$upscope $end
$scope begin id[22] $end
$var parameter 6 b t $end
$upscope $end
$scope begin id[23] $end
$var parameter 6 c t $end
$upscope $end
$scope begin id[24] $end
$var parameter 6 d t $end
$upscope $end
$scope begin id[25] $end
$var parameter 6 e t $end
$upscope $end
$scope begin id[26] $end
$var parameter 6 f t $end
$upscope $end
$scope begin id[27] $end
$var parameter 6 g t $end
$upscope $end
$scope begin id[28] $end
$var parameter 6 h t $end
$upscope $end
$scope begin id[29] $end
$var parameter 6 i t $end
$upscope $end
$scope begin id[30] $end
$var parameter 6 j t $end
$upscope $end
$scope begin id[31] $end
$var parameter 6 k t $end
$upscope $end
$scope begin id[32] $end
$var parameter 7 l t $end
$upscope $end
$scope begin id[33] $end
$var parameter 7 m t $end
$upscope $end
$scope begin id[34] $end
$var parameter 7 n t $end
$upscope $end
$scope begin id[35] $end
$var parameter 7 o t $end
$upscope $end
$scope begin id[36] $end
$var parameter 7 p t $end
$upscope $end
$scope begin id[37] $end
$var parameter 7 q t $end
$upscope $end
$scope begin id[38] $end
$var parameter 7 r t $end
$upscope $end
$scope begin id[39] $end
$var parameter 7 s t $end
$upscope $end
$scope begin id[40] $end
$var parameter 7 t t $end
$upscope $end
$scope begin id[41] $end
$var parameter 7 u t $end
$upscope $end
$scope begin id[42] $end
$var parameter 7 v t $end
$upscope $end
$scope begin id[43] $end
$var parameter 7 w t $end
$upscope $end
$scope begin id[44] $end
$var parameter 7 x t $end
$upscope $end
$scope begin id[45] $end
$var parameter 7 y t $end
$upscope $end
$scope begin id[46] $end
$var parameter 7 z t $end
$upscope $end
$scope begin id[47] $end
$var parameter 7 { t $end
$upscope $end
$upscope $end
$scope module mulXor2 $end
$var wire 32 | k [31:0] $end
$var wire 32 } xorRes [31:0] $end
$var wire 32 ~ permR [31:0] $end
$scope begin id[0] $end
$var parameter 2 !" t $end
$upscope $end
$scope begin id[1] $end
$var parameter 2 "" t $end
$upscope $end
$scope begin id[2] $end
$var parameter 3 #" t $end
$upscope $end
$scope begin id[3] $end
$var parameter 3 $" t $end
$upscope $end
$scope begin id[4] $end
$var parameter 4 %" t $end
$upscope $end
$scope begin id[5] $end
$var parameter 4 &" t $end
$upscope $end
$scope begin id[6] $end
$var parameter 4 '" t $end
$upscope $end
$scope begin id[7] $end
$var parameter 4 (" t $end
$upscope $end
$scope begin id[8] $end
$var parameter 5 )" t $end
$upscope $end
$scope begin id[9] $end
$var parameter 5 *" t $end
$upscope $end
$scope begin id[10] $end
$var parameter 5 +" t $end
$upscope $end
$scope begin id[11] $end
$var parameter 5 ," t $end
$upscope $end
$scope begin id[12] $end
$var parameter 5 -" t $end
$upscope $end
$scope begin id[13] $end
$var parameter 5 ." t $end
$upscope $end
$scope begin id[14] $end
$var parameter 5 /" t $end
$upscope $end
$scope begin id[15] $end
$var parameter 5 0" t $end
$upscope $end
$scope begin id[16] $end
$var parameter 6 1" t $end
$upscope $end
$scope begin id[17] $end
$var parameter 6 2" t $end
$upscope $end
$scope begin id[18] $end
$var parameter 6 3" t $end
$upscope $end
$scope begin id[19] $end
$var parameter 6 4" t $end
$upscope $end
$scope begin id[20] $end
$var parameter 6 5" t $end
$upscope $end
$scope begin id[21] $end
$var parameter 6 6" t $end
$upscope $end
$scope begin id[22] $end
$var parameter 6 7" t $end
$upscope $end
$scope begin id[23] $end
$var parameter 6 8" t $end
$upscope $end
$scope begin id[24] $end
$var parameter 6 9" t $end
$upscope $end
$scope begin id[25] $end
$var parameter 6 :" t $end
$upscope $end
$scope begin id[26] $end
$var parameter 6 ;" t $end
$upscope $end
$scope begin id[27] $end
$var parameter 6 <" t $end
$upscope $end
$scope begin id[28] $end
$var parameter 6 =" t $end
$upscope $end
$scope begin id[29] $end
$var parameter 6 >" t $end
$upscope $end
$scope begin id[30] $end
$var parameter 6 ?" t $end
$upscope $end
$scope begin id[31] $end
$var parameter 6 @" t $end
$upscope $end
$upscope $end
$scope module per1 $end
$var wire 32 A" x [31:0] $end
$var wire 48 B" r [47:0] $end
$upscope $end
$scope module per2 $end
$var wire 32 C" x [31:0] $end
$var wire 32 D" r [31:0] $end
$upscope $end
$scope module s0 $end
$var wire 6 E" x [5:0] $end
$var wire 4 F" r [3:0] $end
$var reg 4 G" t [3:0] $end
$upscope $end
$scope module s1 $end
$var wire 6 H" x [5:0] $end
$var wire 4 I" r [3:0] $end
$var reg 4 J" t [3:0] $end
$upscope $end
$scope module s2 $end
$var wire 6 K" x [5:0] $end
$var wire 4 L" r [3:0] $end
$var reg 4 M" t [3:0] $end
$upscope $end
$scope module s3 $end
$var wire 6 N" x [5:0] $end
$var wire 4 O" r [3:0] $end
$var reg 4 P" t [3:0] $end
$upscope $end
$scope module s4 $end
$var wire 6 Q" x [5:0] $end
$var wire 4 R" r [3:0] $end
$var reg 4 S" t [3:0] $end
$upscope $end
$scope module s5 $end
$var wire 6 T" x [5:0] $end
$var wire 4 U" r [3:0] $end
$var reg 4 V" t [3:0] $end
$upscope $end
$scope module s6 $end
$var wire 6 W" x [5:0] $end
$var wire 4 X" r [3:0] $end
$var reg 4 Y" t [3:0] $end
$upscope $end
$scope module s7 $end
$var wire 6 Z" x [5:0] $end
$var wire 4 [" r [3:0] $end
$var reg 4 \" t [3:0] $end
$upscope $end
$scope module sp1 $end
$var wire 48 ]" x [47:0] $end
$var wire 6 ^" r7 [5:0] $end
$var wire 6 _" r6 [5:0] $end
$var wire 6 `" r5 [5:0] $end
$var wire 6 a" r4 [5:0] $end
$var wire 6 b" r3 [5:0] $end
$var wire 6 c" r2 [5:0] $end
$var wire 6 d" r1 [5:0] $end
$var wire 6 e" r0 [5:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 @"
b11110 ?"
b11101 >"
b11100 ="
b11011 <"
b11010 ;"
b11001 :"
b11000 9"
b10111 8"
b10110 7"
b10101 6"
b10100 5"
b10011 4"
b10010 3"
b10001 2"
b10000 1"
b1111 0"
b1110 /"
b1101 ."
b1100 -"
b1011 ,"
b1010 +"
b1001 *"
b1000 )"
b111 ("
b110 '"
b101 &"
b100 %"
b11 $"
b10 #"
b1 ""
b0 !"
b101111 {
b101110 z
b101101 y
b101100 x
b101011 w
b101010 v
b101001 u
b101000 t
b100111 s
b100110 r
b100101 q
b100100 p
b100011 o
b100010 n
b100001 m
b100000 l
b11111 k
b11110 j
b11101 i
b11100 h
b11011 g
b11010 f
b11001 e
b11000 d
b10111 c
b10110 b
b10101 a
b10100 `
b10011 _
b10010 ^
b10001 ]
b10000 \
b1111 [
b1110 Z
b1101 Y
b1100 X
b1011 W
b1010 V
b1001 U
b1000 T
b111 S
b110 R
b101 Q
b100 P
b11 O
b10 N
b1 M
b0 L
$end
#0
$dumpvars
b110110 e"
b11 d"
b1010 c"
b110101 b"
b110 a"
b110111 `"
b1111 _"
b111101 ^"
b111101001111110111000110110101001010000011110110 ]"
b110 \"
b110 ["
b111101 Z"
b1110 Y"
b1110 X"
b1111 W"
b11 V"
b11 U"
b110111 T"
b11 S"
b11 R"
b110 Q"
b0 P"
b0 O"
b110101 N"
b10 M"
b10 L"
b1010 K"
b0 J"
b0 I"
b11 H"
b1101 G"
b1101 F"
b110110 E"
b11001100011010001000101000110100 D"
b1101110001100110000001000001101 C"
b1011110101100000001011010101100 B"
b11110110000011010110 A"
b11001100011010001000101000110100 ~
b111100011101111110101011001100 }
b11110000000111110110000011111000 |
b1011110101100000001011010101100 K
b111101001111110111000110110101001010000011110110 J
b111101001111110110011000011001001011011001011010 I
b1101110001100110000001000001101 H
b1101 G
b0 F
b10 E
b0 D
b11 C
b11 B
b1110 A
b110 @
b1101110001100110000001000001101 ?
b1011110101100000001011010101100 >
b11001100011010001000101000110100 =
b110110 <
b11 ;
b1010 :
b110101 9
b110 8
b110111 7
b1111 6
b111101 5
b1101 4
b0 3
b10 2
b0 1
b11 0
b11 /
b1110 .
b110 -
b111101001111110111000110110101001010000011110110 ,
b111100011101111110101011001100 +
b11110110000011010110 *
b11110000000111110110000011111000 )
b111100011101111110101011001100 (
b11110110000011010110 '
b111101001111110110011000011001001011011001011010 &
b11110110000011010110 %
b11110000000111110110000011111000 $
b111101001111110110011000011001001011011001011010 #
b11110110000011010110 "
b111100011101111110101011001100 !
$end
#20
$dumpoff
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx ~
bx }
bx |
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
